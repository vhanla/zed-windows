name: Zed Nightly Build
on:
  schedule:
    # Runs every night at midnight UTC
    - cron: "0 0 * * *"  # Fixed invalid cron syntax
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        # Define build configurations for different graphics backends
        graphics_backend: [vulkan, opengl]
        include:
          - graphics_backend: vulkan
            build_artifact_name: zed-release-vulkan  # More specific artifact name
            build_flags: ""
          - graphics_backend: opengl
            build_artifact_name: zed-release-opengl
            build_flags: "--cfg gles"
    
    steps:
      - name: Configure Git long paths
        run: |
          git config --system core.longpaths true
      
      - name: Configure Windows long paths
        shell: powershell
        run: |
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" `
            -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force
      
      - name: Checkout repository
        uses: actions/checkout@v3  # Consider upgrading to v4
        with:
          repository: zed-industries/zed
          ref: main
      
      # Install Rust nightly with WebAssembly target
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          override: true
          target: wasm32-wasip1
      
      # Cache Rust dependencies based on graphics backend
      - name: Configure Rust caching
        uses: Swatinem/rust-cache@v2.7.3
        with:
          key: ${{ matrix.graphics_backend }}
      
      # Build Zed with appropriate graphics backend configuration
      - name: Build release binary
        env:
          RUSTFLAGS: ${{ matrix.build_flags }}
        run: cargo build --release
      
      # Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build_artifact_name }}
          path: target/release/zed.exe
          retention-days: 5  # Add retention period for artifacts
  
  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      # Download all build artifacts
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      # Generate release timestamp
      - name: Generate release timestamp
        id: release_date
        run: echo "RELEASE_TIMESTAMP=$(date +'%Y%m%d')" >> $GITHUB_ENV
      
      # Prepare release packages
      - name: Package release builds
        run: |
          # Create directories for different builds
          mkdir -p zed-release-vulkan zed-release-opengl
          
          # Move executables to their respective directories
          mv artifacts/zed-release-vulkan/zed.exe zed-release-vulkan/
          mv artifacts/zed-release-opengl/zed.exe zed-release-opengl/
          
          # Create zip archives
          zip -r zed-windows-vulkan.zip zed-release-vulkan/*
          zip -r zed-windows-opengl.zip zed-release-opengl/*
      
      # Create GitHub release
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          name: Zed Nightly ${{ env.RELEASE_TIMESTAMP }}  # More descriptive release name
          tag_name: nightly-${{ env.RELEASE_TIMESTAMP }}  # Better tag format
          draft: false
          make_latest: true
          body: |
            Nightly build of Zed editor for Windows
            - Vulkan backend: Standard graphics backend
            - OpenGL backend: Alternative backend for wider compatibility
          files: |
            zed-windows-vulkan.zip
            zed-windows-opengl.zip
